
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ОстаткиТоваров Расход
	Движения.ОстаткиТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Товар = ТекСтрокаТовары.Товар;
		Движение.Остаток = ТекСтрокаТовары.Количество;
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
	Движения.Записать();
	
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиТоваровОстатки.Товар КАК Товар,
		|	ОстаткиТоваровОстатки.Склад КАК Склад,
		|	-ОстаткиТоваровОстатки.ОстатокОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ОстаткиТоваров.Остатки(
		|			,
		|			Склад = &Склад
		|				И Товар В
		|					(ВЫБРАТЬ
		|						РасходнаяНакладнаяТовары.Товар КАК Товар
		|					ИЗ
		|						Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
		|					ГДЕ
		|						РасходнаяНакладнаяТовары.Ссылка = &Ссылка)) КАК ОстаткиТоваровОстатки
		|ГДЕ
		|	ОстаткиТоваровОстатки.ОстатокОстаток < 0";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить("Недостаточно товара "+ВыборкаДетальныеЗаписи.Товар+" в количестве "+ВыборкаДетальныеЗаписи.Количество);
		КонецЦикла;
	КонецЕсли;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
		
		
		
	КонецЕсли;
КонецПроцедуры
